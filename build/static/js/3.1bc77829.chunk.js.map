{"version":3,"sources":["views/Pools/PoolsTable/index.js","views/Pools/PoolsTable/PoolsTable.js","views/Dashboard/Dashboard.js","views/Dashboard/index.js"],"names":["PoolsTable","_this$props","this","props","pools","mainHashrate","utility","data","_","sortBy","node_modules_react_default","a","createElement","react","_ref","i18n","reactstrap_es","responsive","className","id","map","pool","index","key","url","user","color","priority","stratumActive","status","quota","length","displayHashrate","lastShareTime","moment","to","accepted","rejected","discarded","getworks","Component","Dashboard","minerCheck","minerError","mcuError","mcu","miner","settings","minerpercentageRejected","stats","summary","deviceRejected","minerpercentageError","deviceHardware","errorsColor","minerUptime","subtract","elapsed","mainPool","find","o","lastShare","lastShareColor","timestamp","format","diffLastShare","online","Loading","show","bg","title","centerTitle","subtitle","error","log","bfgminerLog","centerSubtitle","icon","showBtn","showProgress","ref","xs","md","xl","DashboardWidget","bgColor","value","workUtility","progressColor","progressValue","secondaryTitle","secondaryValue","convertTemp","minerTemperature","temperatureUnit","tempColor","Number","temperature","toFixed","Math","round","devs","lastShareDifficulty","hardwareErrors","Pools_PoolsTable","minerModeIcon","minerMode","voltage","frequency","minerFanSpeed","btnTo","btnText","connect","state","loadingMcu","mcuStats","loading","loadingMiner","minerStats","loadingOnline","minerOnline"],"mappings":"8OAEeA,mLCaJ,IAAAC,EACoBC,KAAKC,MAAxBC,EADDH,EACCG,MACFC,EAA0B,SAFzBJ,EACQK,QAKf,OAFAF,EAAMG,KAAOC,IAAEC,OAAOL,EAAMG,KAAM,YAGhCG,EAAAC,EAAAC,cAACC,EAAA,KAAD,KACG,SAAAC,KAAGC,KAAH,OACCL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAU,oCAC1BR,EAAAC,EAAAC,cAAA,SAAOM,UAAU,YACfR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,SACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,UACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,YACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,YACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,WACJT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,cACJT,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,MAAIM,UAAU,eAAcR,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,gBAGhCT,EAAAC,EAAAC,cAAA,SAAOM,UAAU,YACbd,EAAMG,KAAKa,IAAI,SAASC,EAAMC,GAC9B,OAAOZ,EAAAC,EAAAC,cAAA,MAAIW,IAAKD,GACZZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,+BAAgCG,EAAKG,MAEtDd,EAAAC,EAAAC,cAAA,MAAIM,UAAU,IACZR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QACK,iBAAdG,EAAKI,KACNf,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOU,MAAM,WAAb,YAEAhB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOU,MAASL,EAAKM,SAAuB,QAAZ,WAAyBN,EAAKM,SAAoB,WAAT,UAG/EjB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,IACZR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAOR,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOU,MAAQL,EAAKO,cAAgB,UAAY,SAAYP,EAAKO,cAAgB,SAAW,cAEnHlB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAAOR,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOU,MAAwB,UAAhBL,EAAKQ,OAAqB,UAAY,UAAaR,EAAKQ,UAE9FnB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIM,UAAU,QAASG,EAAKS,MAAQT,EAAKS,MAAQ,IAAM,aAEzDpB,EAAAC,EAAAC,cAAA,UACGS,EAAKO,cACNlB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,yBACZR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,8BADf,IACmDG,EAAKS,MAAQ,GAAK1B,EAAMG,MAAQH,EAAMG,KAAKwB,OAAS,EAAKC,YAAiB3B,EAAegB,EAAKS,MAAQ,IAAM,KAAOE,YAAgB3B,EAAc,MAGpMK,EAAAC,EAAAC,cAAA,2BAGFF,EAAAC,EAAAC,cAAA,UACIS,EAAKY,cAAgBC,MAASC,GAAGD,IAAOb,EAAKY,cAAe,MAAQ,SAExEvB,EAAAC,EAAAC,cAAA,UACIS,EAAKe,UAET1B,EAAAC,EAAAC,cAAA,UACIS,EAAKgB,UAET3B,EAAAC,EAAAC,cAAA,UACIS,EAAKiB,WAET5B,EAAAC,EAAAC,cAAA,UACIS,EAAKkB,UAET7B,EAAAC,EAAAC,cAAA,MAAIM,UAAU,eAA+B,iBAAdG,EAAKI,KAA2Bf,EAAAC,EAAAC,cAAA,KAAGM,UAAU,eAAkBG,EAAKI,oBA3E9Fe,aCOnBC,mLAEK,IAAAxC,EAC4DC,KAAKC,MAAhEuC,EADDzC,EACCyC,WAAYC,EADb1C,EACa0C,WAAYC,EADzB3C,EACyB2C,SAAUC,EADnC5C,EACmC4C,IAAKC,EADxC7C,EACwC6C,MAAOC,EAD/C9C,EAC+C8C,SAGhDC,EAA0BF,EAAMG,MAAMC,QAAQ3C,KAAK4C,eACnDC,EAAuBN,EAAMG,MAAMC,QAAQ3C,KAAK8C,eAClDC,EAAc,UACdF,GAAwB,GAAKA,GAAwB,IAAKE,EAAc,UACnEF,EAAuB,MAAKE,EAAc,UAGnD,IAAMC,EAAcrB,MAASC,GAAGD,MAASsB,SAASV,EAAMG,MAAMC,QAAQ3C,KAAKkD,QAAS,YAAY,GAG1FC,EAAWlD,IAAEmD,KAAKb,EAAMG,MAAM7C,MAAMG,KAAM,SAASqD,GAAK,OAAOA,EAAE3B,cAAgB,IAAyB,IAApB2B,EAAEhC,gBAG1FiC,EAAY,gBACZ5B,EAAgB,EAChB6B,EAAiB,UACfC,EAAY7B,MAAS8B,OAAO,KAC9BN,GAAYA,EAASzB,gBACvB4B,EAAY3B,MAASC,GAAGD,IAAOwB,EAASzB,cAAe,MACvDA,EAAgByB,EAASzB,eAE3B,IAAMgC,EAAgBF,EAAY9B,EAIlC,OAHIgC,GAAiB,KAAOA,GAAiB,IAAKH,EAAiB,UAC1DG,EAAgB,MAAKH,EAAiB,UAE1CpB,EAAWwB,OAAOrC,OAkBnBc,EAEAjC,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,MAAM,EACNC,GAAG,OACHC,MAAM,kFACNC,aAAa,EACbC,SAAS,yHACTC,MAAQ9B,EACR+B,IAAM7B,EAAII,MAAM0B,YAChBC,gBAAgB,EAChBC,KAAK,wCACLC,SAAS,EACTC,cAAe,IAMnBrE,EAAAC,EAAAC,cAAA,OAAKoE,IAAI,QACJpC,EACClC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOU,MAAM,WAAb,6CAAiEhB,EAAAC,EAAAC,cAAA,SAAKgC,GAAtE,KACA,KAEJlC,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mBACbR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,QAAQ,UACRR,KAAK,aACLS,MAAQtD,YAAuD,SAAvCc,EAAMG,MAAMC,QAAQ3C,KAAKgF,YAAwB,KACzEjB,MAAM,mBACNkB,cAAc,UACdC,cAAc,MACdC,eAAe,OACfC,eAAiBjC,GAAYA,EAASlC,IAAOkC,EAASlC,IAAM,oBAIhEd,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,QAAQ,UACRR,KAAK,yBACLS,MAAQM,YAAY/C,EAAII,MAAM4C,iBAAkB9C,EAAS+C,iBAAiB,GAC1ExB,MAAM,oBACNkB,cAAgBO,YAAUH,YAAY/C,EAAII,MAAM4C,iBAAkB,MAClEJ,cAAgBG,YAAY/C,EAAII,MAAM4C,iBAAkB9C,EAAS+C,iBACjEJ,eAAe,kBACfC,eAAiBC,YAAaI,OAAOnD,EAAII,MAAMgD,aAAe,IAAOlD,EAAS+C,iBAAiB,MAInGpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,QAAQ,cACRR,KAAK,6BACLS,MAAQlC,EAAqB8C,QAAQ,GAAK,IAC1C5B,MAAM,kBACNkB,cAAgBlC,EAChBmC,cAAuC,GAAvBrC,EAChBsC,eAAe,WACfC,eAAiB3C,KAIrBtC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,QAAQ,cACRR,KAAK,cACLS,MAAQ/B,EACRe,MAAM,eACNkB,cAAgB1B,EAChB2B,cAAgB,IAChBC,eAAe,aACfC,eAAiB9B,MAKvBnD,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,UAAU,YACdR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UAAW4B,EAAMG,MAAMC,QAAQ3C,KAAK6B,UACnD1B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,iBAKXT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,UAAU,YACdR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UAAW4B,EAAMG,MAAMC,QAAQ3C,KAAK8B,UACnD3B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,iBAKXT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,UAAU,YACdR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UAAWiF,KAAKC,MAAqD,MAA/CtD,EAAMG,MAAMoD,KAAK9F,KAAK,GAAG+F,sBAC9D5F,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,mBAKXT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,UAAU,YACdR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UAAW4B,EAAMG,MAAMC,QAAQ3C,KAAKgG,gBACnD7F,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,oBAOfT,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mBACbR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,WACJT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4F,EAAD,CAAYpG,MAAQ0C,EAAMG,MAAM7C,MAAQE,QAAUwC,EAAMG,MAAMC,QAAQ3C,KAAKgF,kBAMnF7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,cACJT,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,UAAU,YACdR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,6BAA4BR,EAAAC,EAAAC,cAAA,KAAGM,UAAYuF,YAAc1D,EAAS2D,WAAa,mBAC9FhG,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yBAA0B6B,EAAS2D,WAAa,WAC/DhG,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,mBAKXT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,UAAU,YACdR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,6BAA4BR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,0BACxDR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UACa,WAAvB6B,EAAS2D,UACVhG,EAAAC,EAAAC,cAAA,YAAOmC,EAAS4D,SAAW,EAA3B,IAA+BjG,EAAAC,EAAAC,cAAA,SAAOM,UAAU,aAAjB,OAC7BR,EAAAC,EAAAC,cAAA,qBAGNF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,sBAKXT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,UAAU,YACdR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,6BAA4BR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,qCACxDR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UACa,WAAvB6B,EAAS2D,UACVhG,EAAAC,EAAAC,cAAA,YAAOmC,EAAS6D,WAAa,EAA7B,IAAiClG,EAAAC,EAAAC,cAAA,SAAOM,UAAU,aAAjB,QAC/BR,EAAAC,EAAAC,cAAA,qBAGNF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,wBAKXT,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKiE,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACrBzE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,UAAU,YACdR,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKM,UAAU,6BAA4BR,EAAAC,EAAAC,cAAA,KAAGM,UAAU,0BACxDR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UAAW2B,EAAII,MAAM4D,cAApC,IAAoDnG,EAAAC,EAAAC,cAAA,SAAOM,UAAU,aAAjB,QACpDR,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAAM,GAAA,qBAjMfT,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,MAAO,EACPC,GAAG,OACHC,MAAM,mBACNC,aAAc,EACdC,SAAS,kBACTC,OAAQ,EACRG,gBAAiB,EACjBC,KAAK,gCACLC,SAAU,EACVgC,MAAM,eACNC,QAAQ,iBA5CMvE,aA4PTwE,oBAdS,SAAAC,GACtB,MAAO,CACLC,WAAYD,EAAME,SAASC,QAC3BvE,IAAKoE,EAAME,SAAS5G,KACpBqC,SAAUqE,EAAME,SAAS1C,MACzB4C,aAAcJ,EAAMK,WAAWF,QAC/BtE,MAAOmE,EAAMK,WAAW/G,KACxBoC,WAAYsE,EAAMK,WAAW7C,MAC7B8C,cAAeN,EAAMO,YAAYJ,QACjC1E,WAAYuE,EAAMO,YAAYjH,KAC9BwC,SAAUkE,EAAMlE,WAILiE,CAAyBvE,GC9QzBA","file":"static/js/3.1bc77829.chunk.js","sourcesContent":["import PoolsTable from './PoolsTable'\n\nexport default PoolsTable","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport {\n  Table,\n  Badge\n} from 'reactstrap';\n\nimport { displayHashrate } from '../../Filters';\nimport moment from 'moment';\n\nimport { Trans } from '@lingui/macro';\nimport { I18n } from \"@lingui/react\"\n\nclass PoolsTable extends Component {\n\n  render() {\n    const { pools, utility } = this.props;\n    const mainHashrate = (utility * 71582788);\n\n    pools.data = _.sortBy(pools.data, 'priority');\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Table responsive className=\"table-outline d-table d-sm-table\">\n            <thead className=\"bg-light\">\n              <tr>\n                <th><Trans>Url</Trans></th>\n                <th><Trans>Type</Trans></th>\n                <th><Trans>Active</Trans></th>\n                <th><Trans>Status</Trans></th>\n                <th><Trans>Quota</Trans></th>\n                <th><Trans>Hashrate</Trans></th>\n                <th>Last share</th>\n                <th>Acc</th>\n                <th>Rej</th>\n                <th>Dis</th>\n                <th>Get</th>\n                <th className=\"text-center\"><Trans>Username</Trans></th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white\">\n              { pools.data.map(function(pool, index) {\n                return <tr key={index}>\n                    <td>\n                      <div className=\"font-weight-bold text-muted\">{ pool.url }</div>\n                    </td>\n                    <td className=\"\">\n                      <h5 className=\"mb-0\">\n                        { (pool.user === 'jstefanop.a1') ?\n                          <Badge color=\"warning\">Donation</Badge>\n                        :\n                          <Badge color={ !pool.priority ? 'primary' : 'light' }>{ !pool.priority ? 'Main' : 'Failover' }</Badge> }\n                      </h5>\n                    </td>\n                    <td className=\"\">\n                      <h5 className=\"mb-0\"><Badge color={ pool.stratumActive ? 'success' : 'light' }>{ pool.stratumActive ? 'Active' : 'Inactive' }</Badge></h5>\n                    </td>\n                    <td>\n                      <h5 className=\"mb-0\"><Badge color={ pool.status === 'Alive' ? 'success' : 'danger' }>{ pool.status }</Badge></h5>\n                    </td>\n                    <td>\n                      <h6 className=\"mb-0\">{ pool.quota ? pool.quota + '%' : 'No quota'}</h6>\n                    </td>\n                    <td>\n                    { (pool.stratumActive) ? \n                      <h6 className=\"mb-0 font-weight-bold\">\n                        <i className=\"fa fa-fire text-secondary\"></i> { (pool.quota > 0 && pools.data && pools.data.length > 1) ? displayHashrate((mainHashrate * pool.quota / 100), 'h') : displayHashrate(mainHashrate, 'h') }\n                      </h6>\n                      :\n                      <span>Not active</span>\n                    }\n                    </td>\n                    <td>\n                      { pool.lastShareTime ? moment().to(moment(pool.lastShareTime, 'X')) : 'Never' }\n                    </td>\n                    <td>\n                      { pool.accepted }\n                    </td>\n                    <td>\n                      { pool.rejected }\n                    </td>\n                    <td>\n                      { pool.discarded }\n                    </td>\n                    <td>\n                      { pool.getworks }\n                    </td>\n                    <td className=\"text-center\">{ (pool.user === 'jstefanop.a1') ? <i className=\"fa fa-gift\" /> : pool.user }</td>\n                  </tr>\n              })}\n            </tbody>\n          </Table>\n        )}\n      </I18n>\n    );\n  }\n}\n\nexport default PoolsTable;\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  Card,\n  CardBody,\n  Col,\n  Row\n} from 'reactstrap';\n\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { LoadingErrorBox } from '../Loading';\nimport DashboardWidget from '../Widgets/DashboardWidget';\nimport { convertTemp, displayHashrate, minerModeIcon, tempColor } from '../Filters';\nimport PoolsTable from '../Pools/PoolsTable';\n\nimport { Trans } from '@lingui/macro';\n\nclass Dashboard extends Component {\n\n  render() {\n    const { minerCheck, minerError, mcuError, mcu, miner, settings } = this.props;\n\n    // Miner shares\n    const minerpercentageRejected = miner.stats.summary.data.deviceRejected;\n    const minerpercentageError = miner.stats.summary.data.deviceHardware;\n    let errorsColor = 'success';\n    if (minerpercentageError >= 5 && minerpercentageError <= 7.5) errorsColor = 'warning';\n    else if (minerpercentageError > 7.5) errorsColor = 'danger';\n\n    // Miner uptime\n    const minerUptime = moment().to(moment().subtract(miner.stats.summary.data.elapsed, 'seconds'), true);\n\n    // Active pool\n    const mainPool = _.find(miner.stats.pools.data, function(o) { return o.lastShareTime > 0 && o.stratumActive === true; });\n\n    // Last share\n    let lastShare = 'Not available',\n        lastShareTime = 0,\n        lastShareColor = 'success';\n    const timestamp = moment().format('X');\n    if (mainPool && mainPool.lastShareTime) {\n      lastShare = moment().to(moment(mainPool.lastShareTime, 'X'));\n      lastShareTime = mainPool.lastShareTime;\n    }\n    const diffLastShare = timestamp - lastShareTime;\n    if (diffLastShare >= 300 && diffLastShare <= 600) lastShareColor = 'warning';\n    else if (diffLastShare > 600) lastShareColor = 'danger'\n\n    if (!minerCheck.online.status) {\n      return (\n        <LoadingErrorBox \n          show={ true }\n          bg=\"bg-0\"\n          title=\"Miner is offline\"\n          centerTitle={ true }\n          subtitle=\"Try to start it\"\n          error={ false }\n          centerSubtitle={ true }\n          icon=\"fa-toggle-off animated bounce\"\n          showBtn={ true }\n          btnTo=\"/miner/start\"\n          btnText=\"Start\"\n        />\n      )\n    }\n\n    if (minerError) {\n      return (\n        <LoadingErrorBox \n          show={true}\n          bg=\"bg-0\"\n          title=\"It seems there is a problem to communicate with the miner, check error message.\"\n          centerTitle={true}\n          subtitle=\"Wait at least 1 minute, if problem persists, try to restart the miner, check the settings or try to reboot the system.\"\n          error={ minerError }\n          log={ mcu.stats.bfgminerLog }\n          centerSubtitle={true}\n          icon=\"fa-exclamation-circle animated bounce\"\n          showBtn={false}\n          showProgress={ false }\n        />\n      )\n    }\n\n    return (\n      <div ref=\"main\">\n        { (mcuError) ?\n            <Alert color=\"warning\">There is a problem fetching system stats (<b>{ mcuError }</b>)</Alert>\n          : null \n        }\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-dark\" \n                icon=\"fa fa-fire\" \n                value={ displayHashrate(miner.stats.summary.data.workUtility * 71582788, 'h') }\n                title=\"Current hashrate\"\n                progressColor=\"primary\"\n                progressValue=\"100\"\n                secondaryTitle=\"Pool\"\n                secondaryValue={(mainPool && mainPool.url) ? mainPool.url : 'Nothing active'}\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-info\" \n                icon=\"fa fa-thermometer-half\" \n                value={ convertTemp(mcu.stats.minerTemperature, settings.temperatureUnit, true) }\n                title=\"Miner temperature\"\n                progressColor={ tempColor(convertTemp(mcu.stats.minerTemperature, 'c')) }\n                progressValue={ convertTemp(mcu.stats.minerTemperature, settings.temperatureUnit) }\n                secondaryTitle=\"MCU temperature\"\n                secondaryValue={ convertTemp((Number(mcu.stats.temperature) / 1000), settings.temperatureUnit, true) }\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-gray-300\" \n                icon=\"fa fa-exclamation-triangle\" \n                value={ minerpercentageError.toFixed(1) + '%' }\n                title=\"Hardware errors\"\n                progressColor={ errorsColor }\n                progressValue={ minerpercentageError * 10 }\n                secondaryTitle=\"Rejected\"\n                secondaryValue={ minerpercentageRejected }\n              ></DashboardWidget>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <DashboardWidget \n                bgColor=\"bg-gray-200\" \n                icon=\"fa fa-clock\" \n                value={ minerUptime }\n                title=\"Miner uptime\"\n                progressColor={ lastShareColor }\n                progressValue={ 100 }\n                secondaryTitle=\"Last share\"\n                secondaryValue={ lastShare }\n              ></DashboardWidget>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h4 m-0\">{ miner.stats.summary.data.accepted }</div>\n                  <div><Trans>Accepted</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h4 m-0\">{ miner.stats.summary.data.rejected }</div>\n                  <div><Trans>Rejected</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h4 m-0\">{ Math.round(miner.stats.devs.data[0].lastShareDifficulty * 65535) }</div>\n                  <div><Trans>Difficulty</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h4 m-0\">{ miner.stats.summary.data.hardwareErrors }</div>\n                  <div><Trans>HW Errors</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <h4><Trans>Pools</Trans></h4>\n              <div>\n                <PoolsTable pools={ miner.stats.pools } utility={ miner.stats.summary.data.workUtility }></PoolsTable>\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n        <div>\n          <h4><Trans>Settings</Trans></h4>        \n          <Row>\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className={ minerModeIcon(settings.minerMode) + ' fa text-gray'}></i></div>\n                  <div className=\"h4 m-0 text-uppercase\">{ settings.minerMode || 'Not set' }</div>\n                  <div><Trans>Miner mode</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-bolt text-gray\"></i></div>\n                  <div className=\"h4 m-0\">\n                    { (settings.minerMode === 'custom') ?\n                      <span>{settings.voltage || 0 } <small className=\"textmuted\">mV</small></span>\n                      : <span>Auto</span>\n                    }\n                  </div>\n                  <div><Trans>Miner voltage</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-broadcast-tower text-gray\"></i></div>\n                  <div className=\"h4 m-0\">\n                    { (settings.minerMode === 'custom') ?\n                      <span>{settings.frequency || 0 } <small className=\"textmuted\">MHz</small></span>\n                      : <span>Auto</span>\n                    }\n                  </div>\n                  <div><Trans>Miner frequency</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xs=\"12\" md=\"6\" xl=\"3\">\n              <Card className=\"bg-light\">\n                <CardBody>\n                  <div className=\"h1 text-muted float-right\"><i className=\"fa fa-wind text-gray\"></i></div>\n                  <div className=\"h4 m-0\">{ mcu.stats.minerFanSpeed } <small className=\"textmuted\">RPM</small></div>\n                  <div><Trans>Fan speed</Trans></div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loadingMcu: state.mcuStats.loading,\n    mcu: state.mcuStats.data,\n    mcuError: state.mcuStats.error,\n    loadingMiner: state.minerStats.loading,\n    miner: state.minerStats.data,\n    minerError: state.minerStats.error,\n    loadingOnline: state.minerOnline.loading,\n    minerCheck: state.minerOnline.data,\n    settings: state.settings\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n","import Dashboard from './Dashboard'\n\nexport default Dashboard"],"sourceRoot":""}