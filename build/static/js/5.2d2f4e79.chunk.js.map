{"version":3,"sources":["views/Widgets/DashboardWidget.js","views/Node/Node.js","views/Node/index.js"],"names":["DashboardWidget","props","_this","Object","_Users_prophet_Projects_FutureBit_apolloui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_prophet_Projects_FutureBit_apolloui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_prophet_Projects_FutureBit_apolloui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","updateDimensions","widgets","ReactDOM","findDOMNode","_Users_prophet_Projects_FutureBit_apolloui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","getElementsByClassName","smallWidth","offsetWidth","widgetClasses","state","setState","wrapSecondary","replace","window","addEventListener","removeEventListener","_this$props","hideProgress","hideSecondaryValue","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_8__","className","bgColor","icon","value","title","concat","color","progressColor","progressValue","secondaryTitle","secondaryValue","Component","Node","mcu","loadingNode","node","nodeError","stats","memory","total","react_default","ref","reactstrap_es","error","loadingErrorMessage","code","message","_node$stats","blockchainInfo","connectionCount","miningInfo","peerInfo","sizeOnUsbInGb","disks","usbDisk","filter","disk","mountPoint","sizeOnDiskInGb","sizeOnDisk","sizeProgressValue","sizeSecondaryValue","parseInt","toFixed","xs","md","headers","blocks","blockTime","moment","utc","subtract","format","Math","floor","networkhashps","difficulty","_lingui_react","id","_ref","i18n","responsive","map","peer","index","key","addr","subver","connect","nodeStats","loading","mcuStats","data"],"mappings":"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","file":"static/js/5.2d2f4e79.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Card,\n  CardBody,\n  Progress\n} from 'reactstrap';\n\nclass DashboardWidget extends Component {\n  constructor (props) {\n    super(props);\n\n    // If optional wrapSeconary present, replace text-truncate with text-wrap\n    let widgetClasses = 'd-inline-block text-muted text-truncate';\n    if (props && props.wrapSecondary) {\n      widgetClasses = widgetClasses.replace('text-truncate', 'text-wrap');\n    }\n\n    this.state = { widgetClasses: widgetClasses };\n  }\n\n  updateDimensions = () => {\n    const widgets = ReactDOM.findDOMNode(this).getElementsByClassName('widget');\n    const smallWidth = (widgets[0] && widgets[0].offsetWidth && widgets[0].offsetWidth <= 280) || false;\n    let widgetClasses = this.state.widgetClasses;\n\n    if (smallWidth) { widgetClasses += ' small-width'; }\n    this.setState({ widgetClasses: widgetClasses });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  render() {\n    // Optional parameters to improve component reusability\n    const { hideProgress, hideSecondaryValue } = this.props;\n\n    return (\n      <Card className={this.props.bgColor}>\n        <CardBody className=\"widget\">\n          <div className=\"h1 text-muted float-right\"><i className={this.props.icon + ' text-gray'}></i></div>\n          <div className=\"h4 m-0\">{this.props.value}</div>\n          <div>{this.props.title}</div>\n          <Progress className={`progress-xs my-3 ${hideProgress ? 'invisible' : ''}`} color={this.props.progressColor} value={this.props.progressValue} />\n          <small className={this.state.widgetClasses}>\n            {this.props.secondaryTitle}{hideSecondaryValue ? null : ':'} <b>{this.props.secondaryValue}</b>\n          </small>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default DashboardWidget;\n","import { connect } from 'react-redux'\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  Card,\n  CardBody,\n  Col,\n  Row,\n  Table\n} from 'reactstrap';\n\nimport moment from 'moment';\n\nimport { I18n } from \"@lingui/react\";\nimport { Trans } from '@lingui/macro';\n\nimport DashboardWidget from '../Widgets/DashboardWidget';\n\nclass Node extends Component {\n  render() {\n    // TODO: Use loadingNode\n    const { loadingNode, mcu, node, nodeError } = this.props;\n\n    // If less memory than 500 MB, return Alert and prevent page load\n    if (mcu && mcu.stats && mcu.stats.memory && mcu.stats.memory.total && mcu.stats.memory.total < 500000) {\n      return (\n        <div ref='main'>\n          <Alert color='warning'>There is a problem fetching system stats (<b>MCU must have at least 512 MB of memory to view this page</b>)</Alert>\n        </div>\n      )\n    }\n\n    // Something is very wrong and likely not loading error\n    if (nodeError) {\n      return (\n        <div ref='main'>\n          <Alert color='warning'>There is a problem fetching system stats (<b>{nodeError}</b>)</Alert>\n        </div>\n      )\n    } else if (node && node.stats && node.stats.error) {\n      // Handle loading errors (e.g., Litecoin client off, loading, etc.)\n      let loadingErrorMessage = null\n      // If Litecoin client off, display constant message\n      if (node.stats.error.code === 'ECONNREFUSED') {\n        loadingErrorMessage = 'Node is currently offline'\n      } else if (node.stats.error.code === '-28') {\n        loadingErrorMessage = 'Node is currently loading'\n      } else {\n        // Every other loading error\n        loadingErrorMessage = node.stats.error.message\n      }\n\n      return (\n        <div ref='main'>\n          <Alert color='warning'>There is a problem fetching system stats (<b>{loadingErrorMessage}</b>)</Alert>\n        </div>\n      )\n    }\n\n    const { blockchainInfo, connectionCount, miningInfo, peerInfo } = node.stats;\n\n    // Calculate sizeOnUsb\n    let sizeOnUsbInGb = null;\n    if (mcu && mcu.stats && mcu.stats.disks) {\n      const usbDisk = mcu.stats.disks.filter((disk) => {\n        return disk.mountPoint === '/media/usb0';\n      })[0];\n\n      if (usbDisk) { sizeOnUsbInGb = usbDisk.total / 1000000; }\n    }\n\n    let sizeOnDiskInGb = null;\n    if (blockchainInfo.sizeOnDisk) {\n      sizeOnDiskInGb = blockchainInfo.sizeOnDisk / 1000000000;\n    }\n\n    let sizeProgressValue = null;\n    let sizeSecondaryValue = null;\n    if (sizeOnUsbInGb && sizeOnDiskInGb) {\n      sizeProgressValue = parseInt((sizeOnDiskInGb / sizeOnUsbInGb) * 100);\n      sizeSecondaryValue = (((sizeOnUsbInGb - sizeOnDiskInGb) / sizeOnUsbInGb) * 100).toFixed(2);\n    }\n\n    // Truncate instead of round: secondaryValue\n    // Since being stuck at 99.99% looks better than 100.00%\n    return (\n      <div ref='main'>\n        <div className='animated fadeIn'>\n          <Row>\n            <Col xs='12' md='6'>\n              {blockchainInfo.headers && blockchainInfo.blocks === blockchainInfo.headers &&\n                <DashboardWidget\n                  bgColor='bg-gray-300'\n                  icon='fa fa-clock'\n                  value={blockchainInfo.blocks}\n                  title='Current Blocks'\n                  progressColor='success'\n                  progressValue={100}\n                  secondaryTitle='Last Block'\n                  secondaryValue={blockchainInfo.blockTime && moment().utc().subtract(blockchainInfo.blockTime, 'seconds').format('mm:ss')}\n                />\n              }\n              {blockchainInfo.headers && blockchainInfo.blocks < blockchainInfo.headers &&\n                <DashboardWidget\n                  bgColor='bg-gray-300'\n                  icon='fa fa-clock'\n                  value={`${blockchainInfo.blocks} / ${blockchainInfo.headers}`}\n                  title='Syncing Blocks'\n                  progressColor='warning'\n                  progressValue={parseInt((blockchainInfo.blocks / blockchainInfo.headers) * 100)}\n                  secondaryTitle='Block Sync Progress'\n                  secondaryValue={`${(Math.floor((blockchainInfo.blocks / blockchainInfo.headers) * 100 * 100) / 100).toFixed(2)}%`}\n                />\n              }\n            </Col>\n\n            <Col xs='12' md='6'>\n              <DashboardWidget\n                bgColor='bg-light'\n                icon='fa fa-fire'\n                value={!!(miningInfo.networkhashps) ? `${(miningInfo.networkhashps / 1000000000000).toFixed(2)} Th/s` : '0 Th/s'}\n                title='Network Hashrate'\n                hideProgress={true}\n                progressColor='success'\n                progressValue={100}\n                secondaryTitle='Network Difficulty'\n                secondaryValue={miningInfo.difficulty && miningInfo.difficulty.toFixed(2)}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs='12' md='6'>\n              {connectionCount &&\n                <DashboardWidget\n                  bgColor='bg-gray-300'\n                  icon='fa fa-broadcast-tower'\n                  value={`${connectionCount} / 16`}\n                  title='Connections'\n                  progressColor={connectionCount > 8 ? 'success': 'danger'}\n                  progressValue={parseInt((connectionCount / 16) * 100)}\n                  secondaryTitle={connectionCount === 8 ? 'Only inbound connections detected, please enable port 9333 on your router port forwarding rules for your Apollo IP address' : null}\n                  wrapSecondary={true}\n                  hideSecondaryValue={true}\n                />\n              }\n            </Col>\n\n            <Col xs='12' md='6'>\n              {blockchainInfo.sizeOnDisk &&\n                <DashboardWidget\n                  bgColor='bg-gray-300'\n                  icon='fa fa-hdd'\n                  value={`${sizeOnDiskInGb.toFixed(2)} GB`}\n                  title='Blockchain Size'\n                  progressColor={sizeProgressValue > 90 ? 'danger' : sizeProgressValue > 70 ? 'warning' : 'success'}\n                  progressValue={sizeProgressValue}\n                  secondaryTitle='Remaining Space'\n                  secondaryValue={`${sizeSecondaryValue}%`}\n                />\n              }\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <h4><Trans>Connections</Trans></h4>\n              <div>\n                <I18n>\n                  {({ i18n }) => (\n                    <Table responsive className=\"table-outline d-table d-sm-table\">\n                      <thead className=\"bg-light\">\n                        <tr>\n                          <th><Trans>IP</Trans></th>\n                          <th><Trans>Client</Trans></th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white\">\n                        {peerInfo.map(function(peer, index) {\n                          return (\n                            <tr key={index}>\n                              <td>\n                                <div className=\"font-weight-bold text-muted\">{peer.addr}</div>\n                              </td>\n                              <td>\n                                {peer.subver}\n                              </td>\n                            </tr>\n                          )\n                        })}\n                      </tbody>\n                    </Table>\n                  )}\n                </I18n>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loadingNode: state.nodeStats.loading,\n    mcu: state.mcuStats.data,\n    node: state.nodeStats.data,\n    nodeError: state.nodeStats.error\n  }\n};\n\nexport default connect(mapStateToProps)(Node);\n","import Node from './Node'\n\nexport default Node\n"],"sourceRoot":""}